const { Telegraf, Scenes, Markup, session } = require('telegraf');

const fs = require('fs');
const axios = require('axios')
const dataBase = fs.readFileSync('database.json')

// const RuslanTelegramId = '1060839254';
// const RuslanTelegramId = '184015320';
require('dotenv').config();




const bot = new Telegraf(process.env.BOT_TOKEN)

const birthdayScene = require('./scenes/birthday.js');
const { query, response } = require('express');

const stage = new Scenes.Stage([birthdayScene])
bot.use(session())
bot.use(stage.middleware())

bot.hears('text', (ctx) => {
    console.log(ctx);
})
bot.hears('–ó–∞–º–æ–≤–∏—Ç–∏ —Å—Ç–æ–ª–∏–∫', (ctx) => {

    bot.telegram.sendContact(ctx.chat.id, '+380637444337', 'Yellow Mellow');
    console.log(ctx.chat.id);
})

bot.start(async (ctx) => {

    // const chatID = '1060839254';
    // const chatID = ctx.chat.id;
    // const chatName = ctx.chat.first_name;
    // const chatLastName = ctx.chat.last_name;
    // const chatUserName = ctx.chat.username;

    // const user = {
    //     chatID,
    //     chatName,
    //     chatLastName,
    //     chatUserName
    // }
    // const url = 'https://62a376a85bd3609cee6a9eae.mockapi.io/telegramUsers';
    // const addUser = async () => {
    //     const options = {
    //         url,
    //         method: 'POST',
    //         headers: {
    //             'Accept': 'application/json',
    //             'Content-Type': 'application/json;charset=UTF-8'
    //         },
    //         data: {
    //             chatID,
    //             chatName,
    //             chatLastName,
    //             chatUserName
    //         }
    //     };

    //     axios(options)
    //         .then(response => {
    //             console.log(response);
    //         });
    // }
    // addUser()


    bot.telegram.sendMessage(ctx.chat.id,
        `–ü—Ä–∏–≤—ñ—Ç ${ctx.message.from.username} 
—Ü–µ–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç - —Ç–≤—ñ–π –Ñ–ì–ï–†–¨ 
–≤ –∫–∞–ª—å—è–Ω - –±–∞—Ä—ñ "Yellow Mellow"!üòä`, {
        reply_markup: {
            keyboard: [
                [
                    { text: '–ó–∞–º–æ–≤–∏—Ç–∏ —Å—Ç–æ–ª–∏–∫ ü™ë' }

                ],
                [
                    {
                        text: `–ö–∞–ª—å—è–Ω–Ω–∞ –∫–∞—Ä—Ç–∞
üòóüö¨üå¨` },
                    { text: `–ö–æ–∫—Ç–µ–π–ª—ñ üçπ` }

                ],
                [
                    { text: '–ü–∏–≤–æ üç∫üòµü•¥' },
                    { text: `C–µ—Ç–∏ üç∏üçªü•Çüç∑ü•É` },

                ],
                [
                    { text: 'Short Drinks üç∏' },
                    { text: `–ù–∞–ø–æ—ó üßã` },

                ],
                [
                    { text: '–ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—èüéØ' }

                ],
                // [
                //     { text: '–•–æ—á—É –≤—ñ–¥—Å–≤—è—Ç–∫—É–≤–∞—Ç–∏ –î–† —É –≤–∞—Å!' }

                // ]

            ],
            resize_keyboard: true,
        }
    })
    ctx.replyWithPhoto({ source: fs.createReadStream('img/main.jpg') })
})
// bot.hears('–ó–∞–º–æ–≤–∏—Ç–∏ —Å—Ç–æ–ª–∏–∫ ü™ë', (ctx) => {
//     ctx.replyWithHTML(`–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω—å:

// üì± <b><code>+380637444337</code></b>
// `);
// })



bot.hears('–ó–∞–º–æ–≤–∏—Ç–∏ —Å—Ç–æ–ª–∏–∫ ü™ë', (ctx) => {
    ctx.reply('–í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏ —Å—Ç–æ–ª–∏–∫ –æ–Ω–ª–∞–π–Ω –∞–±–æ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –Ω–∞—à–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É')
    bot.telegram.sendContact(ctx.chat.id, '+380637444337', 'Yellow Mellow');
    console.log(this);
})


bot.hears('–ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—èüéØ', (ctx) => {
    bot.telegram.sendLocation(ctx.chat.id, latitude = '49.83870331057144', longitude = '24.027840313759', { proximity_alert_radius: 10 });
})


bot.hears(`–ö–∞–ª—å—è–Ω–Ω–∞ –∫–∞—Ä—Ç–∞
üòóüö¨üå¨`, (ctx) => {
    ctx.replyWithPhoto({ source: fs.createReadStream('img/hookah.jpg') })
    // ctx.reply('–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∫–∞–ª—å—è–Ω—É', Markup.inlineKeyboard(
    //     [
    //         [Markup.button.callback('330 –≥—Ä–Ω –¢–ê–ù–ñ', '330')],
    //         [Markup.button.callback('270 –≥—Ä–Ω Darkside', '270')],
    //         [Markup.button.callback(`240 –≥—Ä–Ω –ì—É–∞–≤–Ω–æ–æ–æ`, '240')]
    //     ]
    // ))
})

bot.hears('–ü–∏–≤–æ üç∫üòµü•¥', (ctx) => {
    ctx.replyWithPhoto({ source: fs.createReadStream('img/beer.jpg') })
})
bot.hears('C–µ—Ç–∏ üç∏üçªü•Çüç∑ü•É', (ctx) => {
    ctx.replyWithPhoto({ source: fs.createReadStream('img/sets.jpg') })
})
bot.hears('Short Drinks üç∏', (ctx) => {
    ctx.replyWithPhoto({ source: fs.createReadStream('img/short.jpg') })
})
bot.hears('–ö–æ–∫—Ç–µ–π–ª—ñ üçπ', (ctx) => {
    ctx.replyWithPhoto({ source: fs.createReadStream('img/cocktails.jpg') })

    const secondPhoto = () => {
        return ctx.replyWithPhoto({ source: fs.createReadStream('img/cocktails2.jpg') })
    }

    setTimeout(secondPhoto, 300);

})
bot.hears('–ù–∞–ø–æ—ó üßã', (ctx) => {
    ctx.replyWithPhoto({ source: fs.createReadStream('img/drinks.jpg') })
})
bot.hears('–ù–∞–ø–æ—ó üßã', (ctx) => {
    ctx.replyWithPhoto({ source: fs.createReadStream('img/drinks.jpg') })
})
// bot.hears('–•–æ—á—É –≤—ñ–¥—Å–≤—è—Ç–∫—É–≤–∞—Ç–∏ –î–† —É –≤–∞—Å!', ctx => ctx.scene.enter('birthdayWizard'))

// bot.hears('h', ctx => {
//     for (let i = 0; i < 100; i++) {
//         bot.telegram.sendMessage(chat.id, '–ù–µ –±—É–¥—É —è —Ç–µ–±–µ —Å–ø–∞–º–∏—Ç–∏')
//     }
// })
// –∫–∞–ª—å—è–Ω

// bot.help((ctx) => ctx.reply('Send me a sticker'))
// bot.on('sticker', (ctx) => ctx.reply('üëç'))
// bot.hears('hi', (ctx) => ctx.reply('Hey there'))

bot.launch()



// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))


const array = [1, 2, 3, 4, 43430, 434343];



